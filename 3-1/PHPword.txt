
PHP基本用語

・ロジック 
プログラムを処理するための内容や手順のことを指します。 目的のために必要な動作の流れを決めることは「ロジックを組む」と呼ばれ、このロジックに従ってプログラミングを進めていく

・デバッグ 
コンピューターのプログラムのバグを見つけて直す事

・ウォーターフォール開発（開発手法） 
開発手順を一つずつ確認しながら工程を進めていく手法のこと。開発を各工程に分けて進めますが、次のフェーズに進んでしまうと後戻りができなくなります。
工程を一つ一つずつ順番に終わらせていくやり方。
水が高いところから低いところに流れ落ちるように、最初の工程から最後の工程に向かって一つずつ順番に終わらせていきます。

・アジャイル開発（開発手法）
クライアントの要望に応えるシステムをできる限り素早くリリースしようという考えに基づいている開発手法

（メリット）
動くものを早い段階で触る事ができる
要求が変更になった時に応えやすい

（デメリット）
全体像を把握しにくく、スケジュール管理が難しい
各月での成果物が不明瞭
アジャイル開発に精通してる人が必要

・アルゴリズム
問題解決にいたるやり方、考え方

・フローチャート図
プロセス、システム、コンピューターアルゴリズムを示す図のこと。
プロセスの流れを箱と矢印を使って表現した図のこと。アルゴリズムやプログラムの動きを表現する時に使われる
フローチャートがあれば仕事の煙台が見える化できる。

・外部設計（設計書）
基本設計書のこと。システムの概要とか基本的な事を考える工程
要件定義と詳細設計の中繋ぎ的なポジションで行う設計のこと

・内部設計（設計書）
システム開発にあける工程のひとつ。詳細設計とも呼ぶ。
基本設計と実際のプログラミングの中繋ぎ的なポジションで行う設計のこと
基本設計でざっくり考えた概要をもとにして実際のプログラムが作れるまで細かく落とし込む工程のこと

・要件定義（要件仕様書）
システム開発における工程の一つ
お客様の工程をまとめる工程

・単体テスト（システム開発におけるテスト）
システム開発における工程のひとつ。合体前の部品のテストのこと

・結合テスト（システム開発におけるテスト）
合体してちゃんと動くかを確かめるテストのこと

・総合テスト（システム開発におけるテスト）
作ったシステムの卒業テストのこと

・テスト仕様書（どのようなものか）
どんなテストをするかまとめたファイルとか資料のこと
結合テストや統合テストの日程でどの機能をどのてテスト技法を使ってテストするのかが記されている

・テスト仕様書（項目）
1．テストを実施した環境
2．実施するテストの内容
3．テストを実施するためのシステムの操作手順
4．テストの実行結果
5．ここのテスト項目を識別するための番号や記号
6．テストを実行した年月日
7．テストを実行した担当者
8．障害報告表番号（発生した障害の詳細を開発グループに方億する帳票の識別番号

・バリデーション
入力内容や記述内容が要件を満たしているか、妥当性を確認する事
入力チェック、書式チェック

・ログ（意味）
コンピュータがつけてる日記のようなもの。何かを記録する事。あるいは記録した物それ自体の事

・ログ（確認の仕方）
1．ログの収集
2．分析、レポート
3．ログの圧縮
4．ログの監視、モニタリング

・フレームワーク
システム開発を楽に行えるように用意されたプログラムとか雛形のこと。
アプリケーションを開発する土台として機能するソフトウェアのこと。一般的にこのソフトウェアに機能を追加して開発を進めていく。
開発にフレームワークを利用すると、各々必要とされるパートのみの開発で済むため開発効率が良い
共通するコードに機能性を加えて形成された骨組み、枠組みです。
特に大規模なWebアプリケーションなどを開発する際、膨大な量のプログラムを書かなくてはなりません。しかし、フレームワークを使用することで、プログラムの記述量を大幅に削減し、工数をさげる事が可能です。経験が浅いエンジニアでもセキュリティが担保されたプログラムを作成する事ができます。

・PHPのFWの種類と特徴

・LARAVEL
2011年に登場したフレームワーク。GitHubではPHP初心者でも美しいコードを書けるという点が評価されている。
Love beautiful code? We do tooという理念を掲げ、わかりやすくコードが書きやすい、すぐに書き始められるのが魅力。その他、日本語のドキュメントがあることやサポーターによるライブラリがたくさんあるのが特徴

・CakePHP
2005年に登場したオープンソースで開発されたPHPフレームワーク。ケーキを焼くように簡単にPHPで開発ができるフレームワークを目指して開発された
Ruby on Railsの影響を強く受けており，Webアプリケーションを高速に開発出来る。
メリットはMVCを採用していることやbakeコマンドによるプログラム自動生成機能があること、日本語に翻訳されたドキュメントの多いことなどがあげられる。
現在でもフリーランスの求人、案件数が一番多く、人気のPHPフレームワーク

・Symfony
Symfonyは、2005年に登場したMITライセンスに基づくオープンソースのPHP5用フレームワークです。機能テストやデバックの為のツール群が標準装備されていたり、毎年2回リリースアップされ、サポートについても明確なルールを持っているのが特長です。
保守性と安定性を重視した構造になっており、CakePHPと同様Ruby on Railsの影響を受けています。
2019年現在、LaravelやCakePHPと比較すると、開発エンジニア人口が少ないです。

・CodeIgniter
CodeIgniterは、2006年に登場したPHPフレームワークです。
CodeIgniterはコーディング規約への制限が緩く、自由度が高いという特徴があります。
CodeIgniterもMVCモデルを採用しており、コードも簡単で軽量Webアプリケーション開発に向いています。

・Ajax
「Asynchronous JavaScript + XML」の略。一部の情報をサーバーに送信して、それを受け取り反映させる仕組み
JavaScripを使って非同期通信をすること


画像の遷移のない通信を非同期通信
同期処理は一瞬画面が白くなって、画面を切り替わること。こういったことをするためにAjaxという仕組みが必要

・同期通信の場合
webブラウザからサーバーにリクエストを通信し、レスポンスが戻ってくる。
この時に、すべての情報を通信しているので、一瞬画面が白くなる。
=>サーバーからレスポンスが返ってくるまでは他の作業はできない。

・非同期通信の場合
webプラウザから一部の情報をリクエストするので、
それ以外の部分は変わらない。なので画面が白くなることがない。
=>サーバーからレスポンスが返ってこなくても他の作業ができる。

・プログラムや機能に対するお仕事の依頼用の窓口（を使うための説明書）

・LAMP
Linux+Apache+MySQL+PHPで構成される環境のこと

・クラウドサーバー　
クラウド環境に作られたサーバーのこと

・レンタルサーバー
ホスティングサービス、サーバーホスティングとも呼ばれるレンタルサーバーはサーバーを貸し出すサービスのことです
ホームページやアフィリエイトサイトネットショップなどを運営する際にサーバーは必要

・VPS
一台のサーバーを複数の人で使うけど利用者同士が影響し合わない形態になっているサーバーのこと
なんちゃって専用サーバ

・AWS
Amazon Web Serviceのこと

・プラットフォーム
土台となる環境のこと

・カバレッジ（網羅率）
モノや範囲に対して全体のうちのどれくらいをカバーしているかを表すための指標

・エビデンス
何かの証拠となるもののこと

・コンパイル
人間語を機械語に翻訳すること

・バッチ処理
コンピュータで1つの流れのプログラム群（ジョブ）を順次に実行すること。 

・デプロイ（意味と方法、FTPソフトの種類）
意味：・デプロイとは、特定の環境下でアプリケーションやシステムを使えるようにすること。アプリケーションをサーバー上で利用できるようにするための一連の作業をデプロイという。
・デプロイの際には、サーバーを止めなければいけない。
・サーバーを止めなくてもできる方法として、ホットデプロイがある。

方法：カナリアリリース　  サービスやアプリケーションの機能の一部だけをユーザーが利用できるようにリリースしやがて　　全体が利用できるように段階的に進めていく手法をカナリア手法という。
　　：ブルーグリーン　　　  クラウドサービスにおいてよく利用される手法。ブルーとグリーンの二系統の環境を用意して、切り替えることで円滑なシステム運営を行う手法
　　：イミュータブル　　　  新しい環境をデプロイした際に古い環境を削除してしまうのが特徴


.データベース接続クライアント（説明、代表的なもの）
説明：データベース管理システムや関係データベースシステム上のデータを容易に扱うためのソフトウェアである。
代表的なもの：DBMS,RDBMS

・Gitホスティングサービス（説明、代表的なモノ）
説明：gitによるクアウドベースのバージョン管理サービス。
代表的なもの：github,bitbucket,gitlab


・チケット管理ツール（説明、代表的なモノ）
説明：タスク管理ツールのこと。プロジェクト毎に発生する各種タスクを発行して、製作者に対して仕事を依頼するためのもの
代表的なもの： backlog, stock


・DBのJOINとは
複数テーブルの結合を行いたい時に使用する命令　

・SEO
 Search Engine Optimizationの略。検索エンジン最適化という意味。検索エンジンで上位表

・オブジェクト指向
モノに注目した考え方のこと
大変な作業をなくす
大人数で開発する時に便利
同じようなモノを作りやすい


クラス（class）
クラスとはオブジェクトの設計書のようなもので、オブジェクトの中のプロパティやメソッドをひとまとめにしたものだ。

例えば実際に作られた車はオブジェクトだが、車の設計図はクラスだ。割と抽象的な概念なので、ここでは「クラスとは設計書である」と覚えておこう。

プロパティ（property）
オブジェクトが持っているデータのことをプロパティ（属性）と言う。車の例えだと、車というオブジェクトは「メーカー」、「排気量」、「色」といったプロパティを持っていると言える。データにはさまざまな種類があり、たとえば「速度」などといったオブジェクトの状態を示すものもある。

メソッド（method）
メソッド(操作)とは、オブジェクトが持っている処理のことで、車の例だと「走る」、「曲がる」「止まる」など、オブジェクトが何らかのアクションを起こす処理のことだ。このオブジェクトで起こすことができるアクションのことを「振る舞い」とも言うケースもあるので、覚えておいてほしい。
